{"version":3,"sources":["components/Navigation.jsx","components/ImageLinkForm.jsx","components/ImageRender.jsx","components/Logo.jsx","components/Rank.jsx","auth/SignIn.jsx","auth/Register.jsx","containers/App.jsx","serviceWorker.js","index.js","components/brain-bw.png"],"names":["Navigation","route","onNavChange","className","onClick","event","ImageLinkForm","props","handleUrlInput","setState","url","target","value","onDetectPress","_","onFaceDetect","state","type","placeholder","this","onChange","Component","ImageRender","render","boxes","faces","locateFaces","src","id","alt","map","quad","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","boundingBoxes","image","document","querySelector","w","Number","width","h","height","box","top_row","offsetTop","left_col","offsetLeft","window","innerHeight","bottom_row","innerWidth","right_col","Logo","options","max","logo","Rank","name","rank","SignIn","handleSubmit","preventDefault","onSubmit","email","pw","handleRegister","onRegister","htmlFor","href","Register","handleLogin","onLoginPressed","pwConfirm","console","log","particlesOptions","particles","number","density","enable","value_area","color","line_linked","interactivity","detectsOn","events","onHover","mode","clarifai","Clarifai","App","apiKey","accounts","Map","handleRegistration","setRoute","user","getUser","currentUser","showPicture","imageUrl","models","predict","FACE_DETECT_MODEL","then","json","parseResult","catch","reason","output","outputs","status","code","description","data","regions","region","region_info","bounding_box","params","Boolean","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.00ca8239.chunk.js","sourcesContent":["import React from 'react';\nimport './Navigation.css';\n\nconst Navigation = ({route, onNavChange})=> (\n    <nav className={'navigation'}>\n        {route === 'home'?\n            <p className={\"f4 link dim black underline pa3 pointer\"} onClick={event=> onNavChange('logout')}>Sign Out</p>:\n            route === 'login'?\n            <p className={\"f4 link dim black underline pa3 pointer\"} onClick={event=> onNavChange('register')}>Sign Up</p>:\n            <p className={\"f4 link dim black underline pa3 pointer\"} onClick={event=> onNavChange('login')}>Sign In</p>\n        }\n    </nav>\n);\n\nexport default Navigation;\n","import React, {Component} from 'react';\nimport './ImageLinkForm.css';\n\nclass ImageLinkForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {url: ''};\n    }\n\n    handleUrlInput = (event)=> {\n        this.setState({url: event.target.value});\n    }\n\n    onDetectPress = (_)=> {\n        let {onFaceDetect} = this.props;\n        onFaceDetect(this.state.url);\n    }\n\n    render() {\n        return (\n            <>\n                <p>{'We will detect faces in your pictures. Give it a try!'}</p>\n                <div className={'center'}>\n                    <div className={'pa4 br3 shadow-5 form center'}>\n                        <input className={'f4 pa2 w-70 center'} type={'text'} placeholder={'Enter image URL'}\n                                value={this.state.url} onChange={this.handleUrlInput}/>\n                        <button className={'w-30 grow f4 link ph3 pv2 dib white bg-light-purple'}\n                                onClick={this.onDetectPress}>Detect</button>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default ImageLinkForm;\n","import React, {Component} from 'react';\nimport './ImageRender.css';\n\nclass ImageRender extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render = () => {\n        let {url, boxes} = this.props;\n        let faces = this.locateFaces(boxes);\n        return <div className={'ma'}>\n            <div className={'image-render center mt2'}>\n                <img src={url} id={'input-image'} className={'image-render'} alt={'face render'}/>\n                {faces ? faces.map(quad =>\n                        <div className={'bounding-box absolute'}\n                             style={{top: quad.topRow, right: quad.rightCol, bottom: quad.bottomRow, left: quad.leftCol}}/>)\n                    // style={{top: 501, right: 10, bottom: 10, left: 501}}/>)\n                    // style={{inset: `${quad.topRow}px ${quad.rightCol}px ${quad.bottomRow}px ${quad.leftCol}px`}}/>)\n                    // style={{inset: `10px 10px 10px  10px `}}/>)\n                    : <></>}\n            </div>\n        </div>\n    }\n\n    locateFaces = (boundingBoxes)=> {\n        let image = document.querySelector('#input-image');\n        if (!image) return [];\n        let w = Number(image.width), h = Number(image.height);\n        // console.log(`Image size = ${w}x${h}`);\n        return boundingBoxes.map(box=> ({\n            topRow: box.top_row * h + image.offsetTop,\n            leftCol: box.left_col * w + image.offsetLeft,\n            bottomRow: window.innerHeight - image.offsetTop - box.bottom_row * h,\n            rightCol: window.innerWidth - image.offsetLeft - box.right_col * w,\n        }));\n    }\n\n}\n\nexport default ImageRender;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport logo from './brain-bw.png';\nimport './Logo.css';\n\nconst Logo = ()=> (\n    <div className={'pl3'}>\n        <Tilt className={'Tilt br2 shadow-2 tc'} options={ {max: 55} } style={{height: 150, width: 150}}>\n            <div className={'Tilt-inner pa3'}>\n                <img className={'logo-image'} alt={'logo'} src={logo} />\n            </div>\n        </Tilt>\n    </div>\n);\n\nexport default Logo;\n","import React from 'react';\n\nconst Rank = ({name, rank})=> {\n    return <>\n        <div className={'white f3'}>{`${name}, you are ranked #${rank}`}</div>\n    </>;\n}\n\nexport default Rank;\n","import React, {Component} from 'react';\n\nclass SignIn extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            pw: ''\n        }\n    }\n\n    handleSubmit = (event)=> {\n        event.preventDefault();\n        let {onSubmit} = this.props;\n        let {email, pw} = this.state;\n        if (!email) return;\n        onSubmit(email, pw);\n        this.setState({email: '', pw: ''});\n    }\n\n    handleRegister = event=> {\n        event.preventDefault();\n        let {onRegister} = this.props;\n        onRegister();\n    }\n\n    render = () => {\n        return <article className=\"br3 ba b--black-10 mv7-l mv4-m w-100 w-50-m w-25-l mw6 center shadow-5\">\n            <main className=\"pa4 black-80\">\n                <form className=\"measure\" onSubmit={this.handleSubmit}>\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0 center\">Sign In</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                   type=\"email\" name=\"email-address\" id=\"email-address\"\n                                   value={this.state.email}\n                                   onChange={event=> this.setState({email: event.target.value})}/>\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                   type=\"password\" name=\"password\" id=\"password\"\n                                   value={this.state.pw}\n                                   onChange={event => this.setState({pw: event.target.value})} />\n                        </div>\n                        {/*<label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>*/}\n                    </fieldset>\n                    <div className=\"\">\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                               type=\"submit\" value=\"Sign in\"/>\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                        <a href=\"#\" className=\"f6 link dim black db\" onClick={this.handleRegister}>Register</a>\n                        {/*<a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a>*/}\n                    </div>\n                </form>\n            </main>\n        </article>;\n    }\n\n}\n\n\nexport default SignIn;\n","import React, {Component} from 'react';\n\nclass Register extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            pw: '',\n            pwConfirm: '',\n            name: '',\n        }\n    }\n\n    render() {\n        return <article className=\"br3 ba b--black-10 mv7-l mv4-m w-100 w-50-m w-25-l mw6 center shadow-5\">\n            <main className=\"pa4 black-80\">\n                <form className=\"measure\" onSubmit={this.handleSubmit}>\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                        <legend className=\"f1 fw6 ph0 mh0 center\">Register</legend>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                   type=\"text\" name=\"name\" id=\"name\"\n                                   value={this.state.name}\n                                   onChange={event=> this.setState({name: event.target.value})}/>\n                        </div>\n                        <div className=\"mt3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                   type=\"email\" name=\"email-address\" id=\"email-address\"\n                                   value={this.state.email}\n                                   onChange={event=> this.setState({email: event.target.value})}/>\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                   type=\"password\" name=\"password\" id=\"password\"\n                                   value={this.state.pw}\n                                   onChange={event => this.setState({pw: event.target.value})} />\n                        </div>\n                        <div className=\"mv3\">\n                            <label className=\"db fw6 lh-copy f6\" htmlFor=\"password-confirm\">Confirm password</label>\n                            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                                   type=\"password\" name=\"password2\" id=\"password-confirm\"\n                                   value={this.state.pwConfirm}\n                                   onChange={event => this.setState({pwConfirm: event.target.value})} />\n                        </div>\n                        {/*<label className=\"pa0 ma0 lh-copy f6 pointer\"><input type=\"checkbox\" /> Remember me</label>*/}\n                    </fieldset>\n                    <div className=\"\">\n                        <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                               type=\"submit\" value=\"Sign in\"/>\n                    </div>\n                    <div className=\"lh-copy mt3\">\n                        <a href=\"#\" className=\"f6 link dim black db\" onClick={this.handleLogin}>Login</a>\n                        {/*<a href=\"#0\" className=\"f6 link dim black db\">Forgot your password?</a>*/}\n                    </div>\n                </form>\n            </main>\n        </article>;\n    }\n\n    handleLogin = event=> {\n        event.preventDefault();\n        let {onLoginPressed} = this.props;\n        onLoginPressed();\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        let {onSubmit} = this.props;\n        let {email, pw, pwConfirm, name} = this.state;\n        if (pw !== pwConfirm) {\n            console.log('Error: passwords don\\'t match');\n            this.setState({pwConfirm: ''});\n        } else {\n            this.setState({email: '', pw: '', pwConfirm: '', name: ''}, ()=> onSubmit(email, pw, name));\n        }\n    }\n\n}\n\nexport default Register;\n","import React, {Component} from 'react';\nimport 'tachyons';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from \"../components/Navigation\";\nimport ImageLinkForm from \"../components/ImageLinkForm\";\nimport ImageRender from \"../components/ImageRender\";\nimport Logo from '../components/Logo';\nimport Rank from '../components/Rank';\nimport './App.css';\nimport SignIn from \"../auth/SignIn\";\nimport Register from \"../auth/Register\";\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 34,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        },\n        color: {\n            value: '#000000'\n        },\n        line_linked: {\n            enable: true,\n            color: '#000000'\n        }\n    },\n    interactivity: {\n        detectsOn: 'window',\n        events: {\n            onHover: {\n                enable: true,\n                mode: 'repulse'\n            },\n            onClick: {\n                enable: true,\n                mode: 'push'\n            }\n        }\n    }\n}\n\nconst clarifai = new Clarifai.App({apiKey: 'a59ba2e1355547f7a6a3636902cb7e8d'})\n\nconst accounts = new Map();\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imageUrl: null,\n            boxes: [],\n            route: 'login',\n            currentUser: null,\n        }\n    }\n\n    render() {\n        let {imageUrl, route, currentUser} = this.state;\n        return (\n            <div className=\"App\">\n                <Particles params={particlesOptions} className={'particles'}/>\n                {route === 'register'?\n                <Register onSubmit={this.handleRegistration} onLoginPressed={()=> this.setRoute('login')}/> :\n                route === 'home'?\n                <>\n                    <Navigation route={route} onNavChange={this.setRoute}/>\n                    <Logo/>\n                    <Rank name={currentUser.name} rank={currentUser.rank}/>\n                    <ImageLinkForm onFaceDetect={ this.showPicture }/>\n                    {imageUrl? <ImageRender url={imageUrl} boxes={this.state.boxes} /> : <></>}\n                </> :\n                <SignIn onSubmit={this.handleLogin} onRegister={()=> this.setRoute('register')}/>\n                }\n            </div>\n        );\n    }\n\n    handleRegistration = (email, pw, name)=> {\n        accounts[email] = {email: email, pw: pw, name: name, rank: 0};\n        this.setRoute('login');\n    }\n\n    handleLogin = (email, pw)=> {\n        console.log(`Authenticating ${email}...`);\n        let user = this.getUser(email, pw);\n        if (user) {\n            this.setState({currentUser: user, route: 'home'});\n        } else {\n            console.log(\"We don't know you. Do you wanna register?\");\n        }\n    }\n\n    getUser = (email, pw)=> {\n        let user = accounts[email];\n        return (user && user.pw === pw) ? user : null;\n    }\n\n    setRoute = (route)=> {\n        switch (route) {\n            case 'home':\n            case 'login':\n            case 'register':\n                this.setState({route: route});\n                break;\n            case 'logout':\n                this.setState({route: 'login', currentUser: null});\n                break;\n            default:\n                console.log(`Unknown route: /${route}`);\n        }\n    }\n\n    showPicture = (url) => {\n        this.setState({imageUrl: url, boxes: []}, ()=> {\n            // console.log(`Processing picture using AI: ${url}`);\n            clarifai.models.predict(Clarifai.FACE_DETECT_MODEL, url)\n                .then(json=> {\n                    // console.log('Success: ', json);\n                    return json;\n                })\n                .then(this.parseResult)\n                // .then(regions=> {\n                //     console.log('Regions: ', regions);\n                //     return regions;\n                // })\n                .then(boxes=> {\n                    let {currentUser} = this.state;\n                    currentUser.rank += 1;\n                    return boxes;\n                })\n                .then(boxes=> this.setState({boxes: boxes}))\n                .catch(reason=> console.log(`Fail: ${reason}`));\n        });\n    }\n\n    parseResult = (json)=> {\n        let output = json.outputs[0]\n        if (output.status.code !== 10_000) {\n            console.log(`API Error (${output.status.code}): `, output.status.description);\n            return [];\n        }\n        return output.data.regions.map(region=> {\n            return region.region_info.bounding_box;\n        });\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain-bw.b93de154.png\";"],"sourceRoot":""}